Research :
When and why BDD was defined
 When:
  In 2009, Dan North coined the most widely accepted definition of behaviour-driven development:
  ‘BDD is a second-generation, outside-in, pull-based, multiple-stakeholder, multiple-scale, high-automation, agile methodology. It describes a cycle of interactions with well-defined outputs, resulting in the delivery of working, tested software that matters.’

 Why:
  In order to avoid missuderstading in the software development process 

The most important aspects of BDD
 * Shifting from thinking in “tests” to thinking in “behavior”
 * Collaboration between Business stakeholders, Business Analysts, QA Team and developers
 * Ubiquitous language, it is easy to describe
 * Driven by Business Value
 * Extends Test Driven Development (TDD) by utilizing natural language that non technical stakeholders can understand
 * BDD frameworks such as Cucumber or JBehave are an enabler, acting a “bridge” between Business & Technical Language


Why is useful and when could be applied.
 * All development work can be traced back directly to business objectives.
 * Software development meets user need. Satisfied users = good business.
 * A shared language ensures everyone (technical or not) has thorough visibility into the project’s progression

Which type of teams could implement BDD
 * All the teams
 
Structure of a feature – Give an example
	Title (one line describing the story)
	Size
	Priority
	
	Title: Search for Items
	Size: 30
	Priority: Medium

Structure of a user story – Give an example
	Title (one line describing the story)
	 
	Narrative:
	As a [role]
	I want [feature]
	So that [benefit]
	 
	Acceptance Criteria: (presented as Scenarios)

  An example could be:
	Title Search available items on store
	 
	Narrative:
	As a user
	I want to able to search my available items on my store
	So that have the item with their details faster
	 
	Acceptance Criteria: 
	* Search an item using the their name 
	* Search the item using their code
	* Search item using a possible description
	* Search item using a  
	
Structure of a scenario – Give an example

	Scenario 1: Title
	Given [context]
	  And [some more context]...
	When  [event]
	Then  [outcome]
	  And [another outcome]...
  
  An example could be:
     Scenario 1: Search an itme using their name 
	Given A user logged in the application 
	  And User logged is able to do a search
	When  User set the text "Penicilina" on search field
	Then  Result section displays th resulting rows
	  And each row is displaying details about the product found
  
Differences between BDD and BDT
 * BDD focuses on the behavioural aspect of the system rather than the implementation aspect of the system that TDD focuses on.
 * BDD gives a clearer understanding as to what the system should do from the perspective of the developer and the customer. TDD only gives the developer an understanding of what the system should do.
 * BDD allows both the developer and the customer to work together to on requirements analysis that is contained within the source code of the system.
 
 
 Bibliography:
 https://stackoverflow.com/questions/2509/what-are-the-primary-differences-between-tdd-and-bdd
 http://www.assertselenium.com/atdd/difference-between-tdd-bdd-atdd/
 https://inviqa.com/blog/bdd-guide
 https://dannorth.net/whats-in-a-story/
 https://www.atlassian.com/blog/software-teams/making-the-shift-to-behavior-driven-development